{"version":3,"file":"component---src-pages-index-js-b66b578a239c1b64a82e.js","mappings":"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","sources":["webpack://voeentech-frontend/./src/components/image.js","webpack://voeentech-frontend/./src/components/news-list.js","webpack://voeentech-frontend/./src/helpers/date-formatter.js","webpack://voeentech-frontend/./src/components/styled/card.js","webpack://voeentech-frontend/./src/components/product-list.js","webpack://voeentech-frontend/./src/components/styled/page-heading.js","webpack://voeentech-frontend/./src/components/styled/more.js","webpack://voeentech-frontend/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport PropTypes from \"prop-types\"\n\nconst Image = ({ image, className, alt }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      cloudBaseGlobal {\n        placeHolder {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                layout: FULL_WIDTH\n                placeholder: BLURRED\n                aspectRatio: 1.3\n              )\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  if (!image) {\n    return (\n      <GatsbyImage\n        className={className}\n        image={getImage(data.cloudBaseGlobal.placeHolder.localFile)}\n        alt=\"Placeholder Image\"\n      />\n    )\n  }\n\n  return (\n    <GatsbyImage\n      alt={alt}\n      className={className}\n      image={getImage(image.localFile)}\n    />\n  )\n}\n\nImage.propTypes = {\n  image: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n}\n\nexport default Image\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport { formatDate } from \"~/helpers/date-formatter\"\n\nfunction newsSlug(id) {\n  return id.toLowerCase().replace(\"_\", \"-\")\n}\n\nconst NewsList = ({ newsList, gridCols }) => {\n  return (\n    <div className={`grid ${gridCols} gap-1 mb-10`}>\n      {newsList.map(news => {\n        return (\n          <div key={news.id} className=\"mb-1 shadow-lg bg-white rounded-md\">\n            <Link to={`/news/${newsSlug(news.id)}`} key={news.id}>\n              <div className=\"px-4 py-6\">\n                <p>\n                  {news.title}{\" \"}\n                  <span className=\"text-gray-400 float-right\">\n                    {formatDate(news.updatedAt)}\n                  </span>\n                </p>\n              </div>\n            </Link>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nNewsList.propTypes = {\n  newsList: PropTypes.array,\n  gridCols: PropTypes.string,\n}\n\nNewsList.defaultProps = {\n  gridCols: \"grid-cols-1\",\n}\n\nexport default NewsList\n","export const formatDate = (date, fmt = \"yyyy/MM/dd\") => {\n  if (!(date instanceof Date)) {\n    date = new Date(date)\n  }\n\n  var o = {\n    \"M+\": date.getMonth() + 1, // 月份\n    \"d+\": date.getDate(), // 日\n    \"h+\": date.getHours(), // 小时\n    \"m+\": date.getMinutes(), // 分\n    \"s+\": date.getSeconds(), // 秒\n    \"q+\": Math.floor((date.getMonth() + 3) / 3), // 季度\n    S: date.getMilliseconds(), // 毫秒\n  }\n  if (/(y+)/.test(fmt))\n    fmt = fmt.replace(\n      RegExp.$1,\n      (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    )\n  for (var k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(fmt))\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length)\n      )\n  }\n  return fmt\n}\n","import React from \"react\"\n\nconst Card = ({ children }) => (\n  <div className=\"mb-5 shadow-lg bg-white rounded-md\">{children}</div>\n)\n\nexport default Card\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nimport Card from \"~/components/styled/card\"\nimport Image from \"~/components/image\"\n\nconst ProductList = ({ products, gridCols }) => {\n  return (\n    <div className={`grid ${gridCols} gap-6`}>\n      {products.map(product => {\n        return (\n          <Card key={product.id}>\n            <Link to={`/products/${product.slug}`} key={product.id}>\n              <Image\n                alt=\"Product Image\"\n                className=\"rounded-t-md border-gray-200\t border-b\"\n                image={product.image}\n              />\n              <div className=\"px-4 py-6\">\n                <p>{product.title}</p>\n              </div>\n            </Link>\n          </Card>\n        )\n      })}\n    </div>\n  )\n}\n\nProductList.propTypes = {\n  products: PropTypes.array,\n  gridCols: PropTypes.string,\n}\n\nProductList.defaultProps = {\n  gridCols: \"grid-cols-2 md:grid-cols-3 lg:grid-cols-4\",\n}\n\nexport default ProductList\n","import React from \"react\"\n\nconst PageHeading = ({ children }) => (\n  <h1 className=\"mb-5 inline-block border-b-2 text-2xl font-medium\">\n    {children}\n  </h1>\n)\n\nexport default PageHeading\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst More = ({ to }) => (\n  <Link className=\"inline-block float-right text-gray-400\" to={to}>\n    MORE &gt;\n  </Link>\n)\n\nexport default More\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport ReactMarkdown from \"react-markdown\"\nimport Layout from \"~/components/layout\"\nimport PageHeading from \"~/components/styled/page-heading\"\nimport MoreLink from \"~/components/styled/more\"\nimport ProductList from \"~/components/product-list\"\nimport NewsList from \"~/components/news-list\"\nimport SEO from \"~/components/seo\"\n\nconst IndexPage = ({\n  data: {\n    cloudBaseHome,\n    allCloudBaseNews: { edges: newsList },\n  }\n}) => {\n  const seo = { title: \"Home\" }\n  const flatNewsList = newsList.map(({ node }) => node)\n  const latestNewsList = flatNewsList\n    .sort((a, b) => b.updatedAt - a.updatedAt)\n    .slice(0, 5)\n\n  return (\n    <Layout>\n      <SEO seo={seo} />\n      <PageHeading>ABOUT US</PageHeading>\n      <ReactMarkdown className=\"mb-5\" children={cloudBaseHome.about} />\n      <PageHeading>HOT PRODUCTS</PageHeading>\n      <MoreLink to=\"/products\" />\n      <ProductList products={cloudBaseHome.hotProducts} />\n      <PageHeading>NEWS</PageHeading>\n      <MoreLink to=\"/news\" />\n      <NewsList newsList={latestNewsList} />\n    </Layout>\n  )\n}\n\nexport const indexPageQuery = graphql`\n  query HomeQuery {\n    allCloudBaseNews {\n      edges {\n        node {\n          id\n          title\n          updatedAt\n        }\n      }\n    }\n    cloudBaseHome {\n      about\n      hotProducts {\n        title\n        slug\n        id\n        image {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                layout: FULL_WIDTH\n                placeholder: BLURRED\n                aspectRatio: 1.3\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"names":["image","className","alt","data","useStaticQuery","G","getImage","localFile","cloudBaseGlobal","placeHolder","NewsList","newsList","gridCols","map","news","key","id","Link","to","toLowerCase","replace","title","date","fmt","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","S","getMilliseconds","k","test","RegExp","$1","getFullYear","substr","length","formatDate","updatedAt","defaultProps","children","ProductList","products","product","slug","cloudBaseHome","latestNewsList","allCloudBaseNews","edges","node","sort","a","b","slice","seo","about","hotProducts"],"sourceRoot":""}