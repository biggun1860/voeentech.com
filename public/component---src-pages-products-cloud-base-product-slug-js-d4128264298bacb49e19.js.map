{"version":3,"file":"component---src-pages-products-cloud-base-product-slug-js-d4128264298bacb49e19.js","mappings":"+JAiDA,IA5Cc,SAAC,GAA+B,IAA7BA,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,IAC3BC,GAAOC,EAAAA,EAAAA,gBAAe,cAkB5B,OAAKJ,EAWH,gBAAC,EAAAK,EAAD,CACEH,IAAKA,EACLD,UAAWA,EACXD,OAAOM,EAAAA,EAAAA,GAASN,EAAMO,aAZtB,gBAAC,EAAAF,EAAD,CACEJ,UAAWA,EACXD,OAAOM,EAAAA,EAAAA,GAASH,EAAKK,gBAAgBC,YAAYF,WACjDL,IAAI,wB,6ECvBZ,EAJa,SAAC,GAAD,IAAGQ,EAAH,EAAGA,SAAH,OACX,uBAAKT,UAAU,sCAAsCS,I,UCIjDC,EAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/B,OACE,uBAAKZ,UAAS,QAAUY,EAAV,UACXD,EAASE,KAAI,SAAAC,GACZ,OACE,gBAAC,EAAD,CAAMC,IAAKD,EAAQE,IACjB,gBAAC,EAAAC,KAAD,CAAMC,GAAE,aAAeJ,EAAQK,KAAQJ,IAAKD,EAAQE,IAClD,gBAAC,IAAD,CACEf,IAAI,gBACJD,UAAU,0CACVD,MAAOe,EAAQf,QAEjB,uBAAKC,UAAU,aACb,yBAAIc,EAAQM,eAe5BV,EAAYW,aAAe,CACzBT,SAAU,6CAGZ,S,oGC0EA,UAxGoB,SAAC,GAAc,IAC3BE,EAD0B,EAAXZ,KACAoB,iBAEfC,EAAM,CACVH,MAAON,EAAQM,MACfI,WAAYV,EAAQf,OAGhB0B,EAAcX,EAAQY,eAAeC,OAAS,EAAI,UAAY,SAEpE,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKJ,IAAKA,IACV,uBAAKvB,UAAU,oDACZc,EAAQf,OACP,uBAAKC,UAAU,yBACb,gBAAC,IAAD,CACEA,UAAU,aACVD,MAAOe,EAAQf,MACfE,IAAI,mBAIV,uBAAKD,UAAS,yBAA2ByB,GACvC,uBAAKzB,UAAU,QACb,sBAAIA,UAAU,iBAAiBc,EAAQM,QAEzC,uBAAKpB,UAAU,UACZc,EAAQY,gBACP,sBAAI1B,UAAU,8BAAd,kBAEDc,EAAQY,gBACPZ,EAAQY,eAAeb,KAAI,SAACe,EAAMC,GAAP,OACzB,uBACE7B,UAAU,uEACVe,IAAQa,EAAL,IAAaC,GAEhB,wBAAM7B,UAAU,mBACb4B,EAAKE,MAAM,QAAQ,IAEtB,4BAAOF,EAAKE,MAAM,QAAQ,WAMtC,uBAAK9B,UAAU,cACb,sBAAIA,UAAU,kCAAd,uBACA,sBAAIA,UAAU,sCACd,gBAAC,IAAD,CACEA,UAAU,wBACVS,SAAUK,EAAQiB,eAGrBjB,EAAQkB,gBAAgBL,OAAS,GAChC,uBAAK3B,UAAU,4BACb,sBAAIA,UAAU,kCAAd,oBACA,sBAAIA,UAAU,sCACd,gBAAC,IAAD,CAAaW,SAAUG,EAAQkB","sources":["webpack://voeentech-frontend/./src/components/image.js","webpack://voeentech-frontend/./src/components/styled/card.js","webpack://voeentech-frontend/./src/components/product-list.js","webpack://voeentech-frontend/./src/pages/products/{CloudBaseProduct.slug}.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport PropTypes from \"prop-types\"\n\nconst Image = ({ image, className, alt }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      cloudBaseGlobal {\n        placeHolder {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                layout: FULL_WIDTH\n                placeholder: BLURRED\n                aspectRatio: 1.3\n              )\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  if (!image) {\n    return (\n      <GatsbyImage\n        className={className}\n        image={getImage(data.cloudBaseGlobal.placeHolder.localFile)}\n        alt=\"Placeholder Image\"\n      />\n    )\n  }\n\n  return (\n    <GatsbyImage\n      alt={alt}\n      className={className}\n      image={getImage(image.localFile)}\n    />\n  )\n}\n\nImage.propTypes = {\n  image: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n}\n\nexport default Image\n","import React from \"react\"\n\nconst Card = ({ children }) => (\n  <div className=\"mb-5 shadow-lg bg-white rounded-md\">{children}</div>\n)\n\nexport default Card\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nimport Card from \"~/components/styled/card\"\nimport Image from \"~/components/image\"\n\nconst ProductList = ({ products, gridCols }) => {\n  return (\n    <div className={`grid ${gridCols} gap-6`}>\n      {products.map(product => {\n        return (\n          <Card key={product.id}>\n            <Link to={`/products/${product.slug}`} key={product.id}>\n              <Image\n                alt=\"Product Image\"\n                className=\"rounded-t-md border-gray-200\t border-b\"\n                image={product.image}\n              />\n              <div className=\"px-4 py-6\">\n                <p>{product.title}</p>\n              </div>\n            </Link>\n          </Card>\n        )\n      })}\n    </div>\n  )\n}\n\nProductList.propTypes = {\n  products: PropTypes.array,\n  gridCols: PropTypes.string,\n}\n\nProductList.defaultProps = {\n  gridCols: \"grid-cols-2 md:grid-cols-3 lg:grid-cols-4\",\n}\n\nexport default ProductList\n","import React from \"react\"\nimport ReactMarkdown from \"react-markdown\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"~/components/layout\"\nimport ProductList from \"~/components/product-list\"\nimport SEO from \"~/components/seo\"\nimport Image from \"~/components/image\"\n\nconst ProductPage = ({ data }) => {\n  const product = data.cloudBaseProduct\n\n  const seo = {\n    title: product.title,\n    shareImage: product.image,\n  }\n\n  const flexJustify = product.specifications.length > 0 ? \"between\" : \"center\"\n\n  return (\n    <Layout>\n      <SEO seo={seo} />\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-24 mt-4\">\n        {product.image && (\n          <div className=\"md:col-span-2 md:pr-4\">\n            <Image\n              className=\"rounded-md\"\n              image={product.image}\n              alt=\"Product Image\"\n            />\n          </div>\n        )}\n        <div className={`flex flex-col justify-${flexJustify}`}>\n          <div className=\"mb-4\">\n            <h1 className=\"text-4xl mb-1\">{product.title}</h1>\n          </div>\n          <div className=\"w-full\">\n            {product.specifications && (\n              <h2 className=\"text-xl mb-1 border-b mb-2\">Specifications</h2>\n            )}\n            {product.specifications &&\n              product.specifications.map((spec, index) => (\n                <div\n                  className=\"w-full flex text-sm justify-between items-between border-b mb-2 pb-1\"\n                  key={`${spec}-${index}`}\n                >\n                  <span className=\"font-extralight\">\n                    {spec.split(/[:：]/)[0]}\n                  </span>\n                  <span>{spec.split(/[:：]/)[1]}</span>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"my-6 mb-24\">\n        <h1 className=\"text-4xl font-bold text-center\">Product Description</h1>\n        <hr className=\"mt-6 mb-12 m-auto w-24 border-t-4\" />\n        <ReactMarkdown\n          className=\"prose md:w-4/5 m-auto\"\n          children={product.description}\n        />\n      </div>\n      {product.relatedProducts.length > 0 && (\n        <div className=\"flex flex-col my-6 mb-24\">\n          <h2 className=\"text-3xl font-bold text-center\">Related Products</h2>\n          <hr className=\"mt-6 mb-12 m-auto w-24 border-t-4\" />\n          <ProductList products={product.relatedProducts} />\n        </div>\n      )}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ProductQuery($slug: String!) {\n    cloudBaseProduct(slug: { eq: $slug }) {\n      title\n      description\n      id\n      image {\n        localFile {\n          publicURL\n          childImageSharp {\n            gatsbyImageData(\n              layout: FULL_WIDTH\n              placeholder: BLURRED\n              aspectRatio: 1.3\n            )\n          }\n        }\n      }\n      specifications\n      relatedProducts {\n        title\n        id\n        slug\n        image {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                layout: FULL_WIDTH\n                placeholder: BLURRED\n                aspectRatio: 1.3\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default ProductPage\n"],"names":["image","className","alt","data","useStaticQuery","G","getImage","localFile","cloudBaseGlobal","placeHolder","children","ProductList","products","gridCols","map","product","key","id","Link","to","slug","title","defaultProps","cloudBaseProduct","seo","shareImage","flexJustify","specifications","length","spec","index","split","description","relatedProducts"],"sourceRoot":""}