{"version":3,"file":"component---src-pages-news-index-js-b0519d932d1cf87ec1d2.js","mappings":"qLASA,IAAMA,EAAW,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5B,OACE,uBAAKC,UAAS,QAAUD,EAAV,gBACXD,EAASG,KAAI,SAAAC,GACZ,OACE,uBAAKC,IAAKD,EAAKE,GAAIJ,UAAU,sCAC3B,gBAAC,EAAAK,KAAD,CAAMC,GAAE,UAVFF,EAUsBF,EAAKE,GATpCA,EAAGG,cAAcC,QAAQ,IAAK,MASaL,IAAKD,EAAKE,IAChD,uBAAKJ,UAAU,aACb,yBACGE,EAAKO,MAAO,IACb,wBAAMT,UAAU,6BCnBR,SAACU,EAAMC,QAAuB,IAAvBA,IAAAA,EAAM,cAC/BD,aAAgBE,OACpBF,EAAO,IAAIE,KAAKF,IAGlB,IAAIG,EAAI,CACN,KAAMH,EAAKI,WAAa,EACxB,KAAMJ,EAAKK,UACX,KAAML,EAAKM,WACX,KAAMN,EAAKO,aACX,KAAMP,EAAKQ,aACX,KAAMC,KAAKC,OAAOV,EAAKI,WAAa,GAAK,GACzCO,EAAGX,EAAKY,mBAOV,IAAK,IAAIC,IALL,OAAOC,KAAKb,KACdA,EAAMA,EAAIH,QACRiB,OAAOC,IACNhB,EAAKiB,cAAgB,IAAIC,OAAO,EAAIH,OAAOC,GAAGG,UAErChB,EACR,IAAIY,OAAO,IAAMF,EAAI,KAAKC,KAAKb,KACjCA,EAAMA,EAAIH,QACRiB,OAAOC,GACc,IAArBD,OAAOC,GAAGG,OAAehB,EAAEU,IAAM,KAAOV,EAAEU,IAAIK,QAAQ,GAAKf,EAAEU,IAAIM,UAGvE,OAAOlB,EDNYmB,CAAW5B,EAAK6B,gBAfrC,IAAkB3B,OAgClBP,EAASmC,aAAe,CACtBjC,SAAU,eAGZ,S,mCEjCA,IANoB,SAAC,GAAD,IAAGkC,EAAH,EAAGA,SAAH,OAClB,sBAAIjC,UAAU,qDACXiC,K,iFCsCL,UAlCqB,SAAC,GAIf,IACCC,EADF,EAHJC,KACEC,iBAAoBC,MAInBpC,KAAI,qBAAGqC,QACPC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEV,UAAYS,EAAET,aAIlC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKW,IAJG,CAAEjC,MAAO,cAKjB,gBAAC,IAAD,aACA,gBAAC,IAAD,CAAUX,SAAUoC","sources":["webpack://voeentech-frontend/./src/components/news-list.js","webpack://voeentech-frontend/./src/helpers/date-formatter.js","webpack://voeentech-frontend/./src/components/styled/page-heading.js","webpack://voeentech-frontend/./src/pages/news/index.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport { formatDate } from \"~/helpers/date-formatter\"\n\nfunction newsSlug(id) {\n  return id.toLowerCase().replace(\"_\", \"-\")\n}\n\nconst NewsList = ({ newsList, gridCols }) => {\n  return (\n    <div className={`grid ${gridCols} gap-1 mb-10`}>\n      {newsList.map(news => {\n        return (\n          <div key={news.id} className=\"mb-1 shadow-lg bg-white rounded-md\">\n            <Link to={`/news/${newsSlug(news.id)}`} key={news.id}>\n              <div className=\"px-4 py-6\">\n                <p>\n                  {news.title}{\" \"}\n                  <span className=\"text-gray-400 float-right\">\n                    {formatDate(news.updatedAt)}\n                  </span>\n                </p>\n              </div>\n            </Link>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nNewsList.propTypes = {\n  newsList: PropTypes.array,\n  gridCols: PropTypes.string,\n}\n\nNewsList.defaultProps = {\n  gridCols: \"grid-cols-1\",\n}\n\nexport default NewsList\n","export const formatDate = (date, fmt = \"yyyy/MM/dd\") => {\n  if (!(date instanceof Date)) {\n    date = new Date(date)\n  }\n\n  var o = {\n    \"M+\": date.getMonth() + 1, // 月份\n    \"d+\": date.getDate(), // 日\n    \"h+\": date.getHours(), // 小时\n    \"m+\": date.getMinutes(), // 分\n    \"s+\": date.getSeconds(), // 秒\n    \"q+\": Math.floor((date.getMonth() + 3) / 3), // 季度\n    S: date.getMilliseconds(), // 毫秒\n  }\n  if (/(y+)/.test(fmt))\n    fmt = fmt.replace(\n      RegExp.$1,\n      (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    )\n  for (var k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(fmt))\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length)\n      )\n  }\n  return fmt\n}\n","import React from \"react\"\n\nconst PageHeading = ({ children }) => (\n  <h1 className=\"mb-5 inline-block border-b-2 text-2xl font-medium\">\n    {children}\n  </h1>\n)\n\nexport default PageHeading\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"~/components/layout\"\nimport PageHeading from \"~/components/styled/page-heading\"\nimport NewsList from \"~/components/news-list\"\nimport SEO from \"~/components/seo\"\n\nconst NewsListPage = ({\n  data: {\n    allCloudBaseNews: { edges },\n  },\n}) => {\n  const flatNewsList = edges\n    .map(({ node }) => node)\n    .sort((a, b) => b.updatedAt - a.updatedAt)\n\n  const seo = { title: \"NewsList\" }\n\n  return (\n    <Layout>\n      <SEO seo={seo} />\n      <PageHeading>News</PageHeading>\n      <NewsList newsList={flatNewsList} />\n    </Layout>\n  )\n}\n\nexport const newsListPageQuery = graphql`\n  query NewsListQuery {\n    allCloudBaseNews {\n      edges {\n        node {\n          id\n          title\n          updatedAt\n        }\n      }\n    }\n  }\n`\n\nexport default NewsListPage\n"],"names":["NewsList","newsList","gridCols","className","map","news","key","id","Link","to","toLowerCase","replace","title","date","fmt","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","S","getMilliseconds","k","test","RegExp","$1","getFullYear","substr","length","formatDate","updatedAt","defaultProps","children","flatNewsList","data","allCloudBaseNews","edges","node","sort","a","b","seo"],"sourceRoot":""}